table_create Comments TABLE_PAT_KEY ShortText
column_create Comments content COLUMN_SCALAR ShortText

table_create Articles TABLE_PAT_KEY ShortText
column_create Articles content COLUMN_SCALAR Text
column_create Articles comment COLUMN_SCALAR Comments

table_create Lexicon TABLE_PAT_KEY|KEY_NORMALIZE ShortText \
  --default_tokenizer TokenBigram
column_create Lexicon articles_content COLUMN_INDEX|WITH_POSITION \
  Articles content
column_create Lexicon comments_content COLUMN_INDEX|WITH_POSITION \
  Comments content

column_create Comments article COLUMN_INDEX Articles comment

load --table Comments
[
{"_key": "1-1", "content": "I'm using groonga too!"},
{"_key": "2-1", "content": "I'm using groonga and mroonga!"},
{"_key": "3-1", "content": "I'm using mroonga too!"},
{"_key": "4-1", "content": "I'm using groonga and rroonga too!"}
]

load --table Articles
[
["_key",              "content",            "comment"],
["groonga-is-fast",   "Groonga is fast!",   "1-1"],
["groonga-is-useful", "Groonga is useful!", "2-1"],
["mroonga-is-fast",   "Mroonga is fast!",   "3-1"],
["rroonga-is-fast",   "Rroonga is fast!",   "4-1"]
]

select Articles --match_columns comment.content --query groonga \
  --output_columns "_id, _score, *"
